@import 'colors';

$fa-font-path: "../node_modules/font-awesome/fonts";
$font-size: 14px;
$prompt-padding: 5px;
$default-shadow: 0 2px 8px 1px rgba(0, 0, 0, 0.3);

@import '../node_modules/font-awesome/scss/font-awesome';
@import '../node_modules/octicons/octicons/sprockets-octicons';

// Fix the issue when icons aren't displayed.
// https://github.com/black-screen/black-screen/issues/95
.fa {
  transform: translate(0, 0);
}

@font-face {
  font-family: 'octicons';
  src: url("../node_modules/octicons/octicons/octicons.eot?#iefix") format("embedded-opentype"),
  url("../node_modules/octicons/octicons/octicons.woff") format("woff"),
  url("../node_modules/octicons/octicons/octicons.ttf") format("truetype"),
  url("../node_modules/octicons/octicons/octicons.svg#octicons") format("svg");
  font-weight: normal;
  font-style: normal;
}

a {
  color: map-get($colors, 'blue');
}

@each $color, $value in $colors {
  [data-color='#{$color}'] {
    color: $value;
  }

  [data-background-color='#{$color}'] {
    background-color: $value;
  }
}

[data-weight='bold'] {
  font-weight: bold;
}

[data-underline='true'] {
  text-decoration: underline;
}

@mixin info-panel {
  padding: 8px 0 6px 0.6em;
  min-height: 2em;
  line-height: 1.3;
  background-color: #23252B;
}

* {
  box-sizing: border-box;
}

html {
  -webkit-backface-visibility: hidden;
}

body, pre {
  background-color: map-get($colors, 'black');
  color: map-get($colors, 'white');
  font-family: 'Meslo LG S for Powerline', 'Menlo', monospace !important;
  font-size: $font-size;
  margin: 0;
}

.invocations {
  margin-bottom: 40px;
}

.prompt-wrapper {
  position: relative;
  padding-top: $prompt-padding;
  width: 100%;
  background-color: map-get($colors, 'bright-black');

  $decoration-width: 30px;
  $height: 17px;
  $arrow-z-index: 2;
  $progress-bar-stripes-size: 30px;

  @keyframes progress-bar-stripes {
    from {
      background-position: 0 0;
    }
    to {
      background-position: $progress-bar-stripes-size 0;
    }
  }

  .prompt-decoration {
    display: inline-block;
    height: 17px;
  }

  .arrow {
    position: relative;
    width: $decoration-width;
    height: $height;
    margin: 0 auto;
    overflow: hidden;
    z-index: $arrow-z-index;

    &:after {
      content: '';
      position: absolute;
      width: 200%;
      height: 200%;
      top: -11px;
      right: -8px;
      background-color: lighten(map-get($colors, 'bright-black'), 10% );
      transform-origin: 54% 0;
      transform: rotate(45deg);
      z-index: $arrow-z-index - 1;

      background-size: 0; // Is used to animate the in-progress arrow.
    }
  }

  &.failure {
    .arrow:after {
      background-color: map-get($colors, 'red');
    }
  }

  &.in-progress {
    .arrow:after {
      transition: background 0.1s step-end;
      animation: progress-bar-stripes 0.5s linear infinite;
      background-image: linear-gradient(45deg, map-get($colors, 'bright-black') 25%, transparent 25%, transparent 50%, map-get($colors, 'bright-black') 50%, map-get($colors, 'bright-black') 75%, transparent 75%, transparent);
      background-size: $progress-bar-stripes-size $progress-bar-stripes-size;
    }
  }

  .prompt {
    position: absolute;
    left: $decoration-width - 10px;
    right: 0;
    padding: 0 20px;
    height: $height;
    color: map-get($colors, 'white');
    background-color: map-get($colors, 'bright-black');
    font-size: $font-size;

    @mixin common {
      display: inline-block;
      white-space: pre-wrap;
      -webkit-appearance: none;
      border: none;
      outline: none;
    }

    @include common;

    &:focus {
      @include common;
    }
  }

  .actions {
    float: right;
    margin-right: 15px;

    @mixin action {
      text-align: center;
      width: $font-size;
      display: inline-block;
      margin: 0 3px;
    }

    .scroll-to-top {
      @include action;
      color: map-get($colors, 'white');
    }

    .decoration-toggle {
      @include action;
      color: map-get($colors, 'green');

      &.disabled {
        color: map-get($colors, 'white');
      }
    }
  }
}

.invocation {
  //margin-bottom: $font-size * 2;

  &.in-progress {
    .output.alternate {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 3;

      margin: 0;
      padding: 5px 0;
    }
  }
}

.output {
  margin: 10px;
}

#black-board {
  margin-bottom: 24px;
}

#sizes-calculation {
  position: absolute;
  visibility: hidden;
  height: auto;
  width: auto;
  white-space: nowrap;
}

.terminal-layout {
  display: flex;

  flex-wrap: nowrap;
  flex-direction: column;
}

.terminal {
  position: relative;
  height: 100%;
  width: 100%;
}

.status-line {
  position: fixed;
  bottom: 0;
  width: 100%;

  @include info-panel;

  .current-directory {
    display: inline-block;

    &:before {
      @extend .octicon;
      @extend .octicon-file-directory;
      margin-right: 5px;
    }
  }

  .vcs-data {
    display: inline-block;
    float: right;
    margin-right: 10px;

    .status {
      display: inline-block;

      &:before {
        @extend .octicon;
        @extend .octicon-git-branch;
        margin-right: 5px;
      }
    }
  }
}

pre {
  white-space: pre-wrap;
}

.autocomplete {
  position: absolute;

  box-shadow: $default-shadow;
  background-color: map-get($colors, 'black');

  ul {
    max-height: 300px;

    overflow: auto;

    padding: 0;
    margin: 0;

    li {
      list-style-type: none;
      padding: 2px;

      .value {
        padding-right: 30px;
      }

      .synopsis {
        float: right;
        opacity: 0.5;
        font-size: 0.8em;
        margin-top: 0.65em;
        margin-right: 5px;
      }

      .score {
        color: map-get($colors, 'red');
        float: right;
        font-size: 0.8em;
        margin: 0.3em 3px 0 8px;

        border-radius: 45%;

        width: 40px;
        height: 20px;
        padding: 3px;

        border: 1px solid;
        text-align: center;
      }

      .icon:before {
        display: inline-block;
        content: ' ';

        width: 2em;
        height: 2em;
        line-height: 2em;


        vertical-align: middle;
        text-align: center;
        font-style: normal;

        opacity: .5;
        margin-right: 10px;

        background-color: rgba(0, 0, 0, 0.15);
      }

      &.alias .icon {
        @extend .fa;
        @extend .fa-at;
        color: map-get($colors, 'yellow');
      }

      &.file .icon {
        @extend .fa;
        @extend .fa-file;
      }

      &.executable .icon, {
        @extend .fa;
        @extend .fa-asterisk;
        color: map-get($colors, 'green');
      }

      &.history .icon {
        @extend .fa;
        @extend .fa-history;
        color: map-get($colors, 'blue');
      }

      &.command .icon:before {
        content: 'C';
      }

      &.option .icon:before {
        content: 'O';
      }

      &.selected {
        background-color: #383E4A;
      }
    }
  }

  .description {
    display: block;
    box-shadow: 0 4px 8px 1px rgba(0, 0, 0, 0.3);

    position: absolute;
    left: 0;
    right: 0;

    font-size: 0.8em;

    @include info-panel;
  }
}

.fixedsticky {
  top: 0;
}
